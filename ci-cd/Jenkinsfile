pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Pranav8722/container-security.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    bat 'docker build -t pranav224/container-security-image:latest -f images/Dockerfile .'
                }
            }
        }
        stage('Scan Docker Image with Trivy') {
            steps {
                script {
                    bat 'trivy image pranav224/container-security-image:latest'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    bat 'echo dckr_pat_EDzEoL3X8MIugIjpk20T364-1ks | docker login -u pranav224 --password-stdin'
                    bat 'docker push pranav224/container-security-image:latest'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    bat 'kubectl --kubeconfig="C:\\Users\\prana\\.kube\\config" apply -f k8s/deployment.yaml --validate=false'
                }
            }
        }
    }

    post {
        always {
            echo 'Performing cleanup...'
            deleteDir() // Clean up workspace
        }
        success {
            echo 'Pipeline succeeded!'
            mail to: 'team@example.com',
                 subject: 'Pipeline Success',
                 body: 'The Jenkins pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
            mail to: 'team@example.com',
                 subject: 'Pipeline Failure',
                 body: 'The Jenkins pipeline failed. Check the logs for details.'
        }
    }
}
